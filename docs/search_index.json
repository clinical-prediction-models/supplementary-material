[
["index.html", "Clinical prediction models Preface", " Clinical prediction models Ewout Steyerberg 2020-08-20 Preface Short introduction here. "],
["ch-introduction.html", "1 Introduction", " 1 Introduction Chapter 1 has no additional material. "],
["ch-applications.html", "2 Applications of Prediction Models", " 2 Applications of Prediction Models See here for additional material. "],
["ch-design.html", "3 Study Design for Prediction Modeling", " 3 Study Design for Prediction Modeling Chapter 3 has no additional material. "],
["ch-statmods.html", "4 Statistical Models for Prediction", " 4 Statistical Models for Prediction Chapter 4 has no additional material. "],
["ch-overfitting.html", "5 Overfitting and Optimism in Prediction Models 5.1 Figures 5.2 to 5.5", " 5 Overfitting and Optimism in Prediction Models 5.1 Figures 5.2 to 5.5 5.1.1 Fig 5.2: Noise in estimating 10% mortality per center # Surg mortality; 10% par(mfrow = c(1,1), mar=c(5,5,1,1)) for (mort in c(.1)) { ##,0.05,0.02,.01)) { # 4 mortalities or only 1 plot(x=seq(from=-.025,to=.975,by=.05), dbinom(x=0:20,20,mort), axes=F, type = &quot;s&quot;, lwd=2, xlim=c(-.05,.35), ylim=c(0,.33), col=mycolors[2], xlab=paste(&#39;Observed mortality, true mortality &#39;,round(100*mort,0),&quot;%&quot;,sep=&quot;&quot;), ylab=&#39;probability density&#39;) axis(side=1, at=c(0,.1,.2,.3),labels=c(&quot;0%&quot;,&quot;10%&quot;,&quot;20%&quot;,&quot;30%&quot;)) axis(side=2,at=c(0,0.1,.2,.3,.4,.5,.6,.7),labels=c(&quot;0%&quot;,&quot;10%&quot;,&quot;20%&quot;,&quot;30%&quot;,&quot;40%&quot;,&quot;50%&quot;,&quot;60%&quot;,&quot;70%&quot;)) text(x=mort,y=.02+ dbinom(x=max(round(mort*20),0),20,mort),labels=paste(&quot;n=20&quot;), col=mycolors[2]) for (i in c(50,200)) { # add more sample sizes lines(x=seq(from=0-(0.5*1/i),to=1-(0.5*1/i),by=1/i), dbinom(x=0:i,i,mort), type = &quot;s&quot;, lty=ifelse(i==50,2,4), lwd=2, col=mycolors[ifelse(i==50,3,4)]) text(x=mort,y=.02+dbinom(x=max(round(mort*i),0),i,mort),labels=paste(&quot;n=&quot;,i, sep=&quot;&quot;), col=mycolors[ifelse(i==50,3,4)]) } # end loop n=50,200 } # end loop mort ## End Fig 5.2 ## ## function for Fig 5.3 and Fig 5.4: Noise vs Heterogeneity illustrate_noise_heterogeneity &lt;- function(n=20, mort=0.1, tau = c(0,.01,.02,.03)) { par(mfrow = c(2,2), pty=&#39;m&#39;, mar=c(2.5,4,1.5,1)) # Make data set with 100 centers, each 20 patients, 10% mortality, variability sd 0 to 0.03 seedn &lt;- 102 set.seed(seedn) ncenter &lt;- 50 nsubjects &lt;- n # n can be changed # simple SD used on probability scale, can be improved upon for (sdtau in tau) { # set for tau can be changed truemort &lt;- rnorm(n=ncenter,mean=mort,sd=sdtau) # mort can be changed mortmat &lt;- as.matrix(cbind(1:ncenter, sapply(truemort,FUN=function(x)rbinom(n=1,nsubjects,x))/nsubjects,truemort)) # Start plotting plot(x=0, y=0, pch=&#39;&#39;, xlim=c(-.2,1.2), ylim=c(-.03,.35),axes=F, xlab=&quot;&quot;, ylab=ifelse(sdtau==0 | sdtau==.02, &#39;Mortality&#39;, &quot;&quot;)) axis(side=2,at=c(0,.1,.2,.3),labels=c(&quot;0%&quot;,&quot;10%&quot;,&quot;20%&quot;,&quot;30%&quot;), las=1) axis(side=1,at=c(0,1),labels=c(&quot;Observed&quot;,&quot;True mortality&quot;)) text(x=1, y=.3, ifelse(sdtau==0,&quot;No heterogeneity&quot;, ifelse(sdtau!=0, paste(&quot;+/-&quot;, sdtau))), cex=1, adj=1, font=2) for (i in (1:ncenter)) { set.seed(i+seedn) lines(x=c(0+runif(1,min=-.07,max=.07),1), y=c(mortmat[i,2]+runif(1,min=-.001,max=.01), mortmat[i,3]), col=mycolors[rep(1:10,10)[i]]) set.seed(i+seedn) points(x=c(0+runif(1,min=-.07,max=.07),1), y=c(mortmat[i,2]+runif(1,min=-.001,max=.01), mortmat[i,3]), pch=c(&quot;o&quot;, &quot;+&quot;),col=mycolors[rep(1:10,10)[i]]) } } } # end function that illustrates the impact of noise (determined by n) vs heterogeneity (determined by sdtau) 5.1.2 Figs 5.3 and 5.4 These plots llustrate the impact of noise (determined by n, 20 or 200) vs heterogeneity (determined by sdtau (0 - 0.03)). With small n, such as n=20 per center, mortality such as 10% cannot be estimated reliably. Reliable estimation of a centerâ€™s performance requires a large n, such as n=200. 5.1.3 n=20 5.1.4 n=200 "],
["ch-altmods.html", "6 Choosing Between Alternative Models 6.1 Non-linearity illustrations", " 6 Choosing Between Alternative Models 6.1 Non-linearity illustrations 6.1.1 Prepare GUSTO data Some logistic regression fits with linear, square, rcs, linear spline terms # Import gusto; publicly available gusto &lt;- read.csv(&quot;data/gusto_age.csv&quot;)[-1] Fmort &lt;- as.data.frame(read.csv(&quot;data/Fmort.csv&quot;))[-1] Fmort$age10 &lt;- Fmort$age/10 Fmort$age102 &lt;- Fmort$age10^2 getwd() ## [1] &quot;C:/Users/efbonneville/Documents/thuiswerk_COVID-19_local/clin-pred-mods_bookdown&quot; 6.1.2 anova results for the different fits We note minor differences between the continuous fits, and a clear loss of information for the dichtomization at age 65 years anova(agegusto.linear) ## Wald Statistics Response: DAY30 ## ## Factor Chi-Square d.f. P ## AGE 1728.89 1 &lt;.0001 ## TOTAL 1728.89 1 &lt;.0001 anova(agegusto.square) ## Wald Statistics Response: DAY30 ## ## Factor Chi-Square d.f. P ## AGE 1858.27 2 &lt;.0001 ## Nonlinear 13.21 1 3e-04 ## TOTAL 1858.27 2 &lt;.0001 anova(agegusto.rcs) ## Wald Statistics Response: DAY30 ## ## Factor Chi-Square d.f. P ## AGE 1878.45 4 &lt;.0001 ## Nonlinear 24.71 3 &lt;.0001 ## TOTAL 1878.45 4 &lt;.0001 anova(agegusto.linearspline) ## Wald Statistics Response: DAY30 ## ## Factor Chi-Square d.f. P ## AGE 1846.73 2 &lt;.0001 ## TOTAL 1846.73 2 &lt;.0001 anova(agegusto.cat65) ## Wald Statistics Response: DAY30 ## ## Factor Chi-Square d.f. P ## AGE 1262.57 1 &lt;.0001 ## TOTAL 1262.57 1 &lt;.0001 6.1.3 Plotting of age effects Plot age effect first at lp scale (logodds), then at probability scale Age effect at logodds scale; Age effect at probability scale Fig 6.1 6.1.4 Start surgical mortality by age in Medicare Age effect at logodds scale 6.1.5 anova results for the fit of age, with interaction by type of surgery Type of surgery is clearly most relevant (chi2 &gt;13500) in all fits. Age is als relevant (chi2&gt;3000), and a square term is not needed (chi2 = 2); the interaction adds a little bit (chi2 95). With these large numbers (1.1M patients), most effects have p&lt;.0001. We will evaluate the differences between fits with or without interaction term graphically further down # Look for model improvements anova(fitplot2) # linear age effect, no interaction with surgery ## Wald Statistics Response: mort ## ## Factor Chi-Square d.f. P ## surgery 13500.19 13 &lt;.0001 ## age 3167.14 1 &lt;.0001 ## TOTAL 16445.99 14 &lt;.0001 anova(fitage2) # age square added ## Wald Statistics Response: mort ## ## Factor Chi-Square d.f. P ## surgery 13499.66 13 &lt;.0001 ## age10 18.13 1 &lt;.0001 ## age102 2.33 1 0.127 ## TOTAL 16424.97 15 &lt;.0001 anova(fitplot) # interaction added to linear age effect ## Wald Statistics Response: mort ## ## Factor Chi-Square d.f. P ## surgery (Factor+Higher Order Factors) 13566.02 26 &lt;.0001 ## All Interactions 94.55 13 &lt;.0001 ## age (Factor+Higher Order Factors) 3280.66 14 &lt;.0001 ## All Interactions 94.55 13 &lt;.0001 ## surgery * age (Factor+Higher Order Factors) 94.55 13 &lt;.0001 ## TOTAL 16620.27 27 &lt;.0001 6.1.6 Plotting of predicted age effects, with interaction by type of surgery; add 95% CI Plot age effects at logodds scale with 95% CI 6.1.7 Plotting of age effects with original data points Fit with interaction (solid lines) and no interaction (dashed lines) "]
]
